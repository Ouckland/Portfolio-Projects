# Generated by Django 5.2 on 2025-06-30 13:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='KnownDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='known_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.country')),
            ],
            options={
                'unique_together': {('country', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SeekerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('employer', 'Employer'), ('seeker', 'Job Seeker')], default='employer', max_length=10)),
                ('full_name', models.CharField(max_length=255)),
                ('job_type', models.CharField(choices=[('remote', 'Remote'), ('onsite', 'Onsite'), ('hybrid', 'Hybrid')], max_length=6)),
                ('linkedin', models.URLField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('bio', models.TextField()),
                ('skills', models.TextField()),
                ('experience', models.TextField()),
                ('education', models.TextField()),
                ('certifications', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['docx', 'pdf', 'doc'], message='Only pdf, docx, and doc document formats are allowed!')])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'svg'], message='Only jpg, jpeg, png and svg image formats are allowed!')])),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('employer', 'Employer'), ('seeker', 'Job Seeker')], default='employer', max_length=10)),
                ('company_name', models.CharField(max_length=255)),
                ('company_website', models.URLField()),
                ('industry', models.CharField(max_length=255)),
                ('contact_number', models.CharField(blank=True, max_length=15)),
                ('description', models.TextField(blank=True)),
                ('company_size', models.CharField(max_length=50)),
                ('about_company', models.TextField()),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'svg'], message='Only jpg, jpeg, png and svg image formats are allowed!')])),
                ('registration_document', models.FileField(blank=True, null=True, upload_to='registration_docs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['docx', 'pdf', 'doc'], message='Only pdf, docx, and doc document formats are allowed!')])),
                ('job_posting_preference', models.CharField(choices=[('open', 'Open to All'), ('verified', 'Verified Only')], max_length=8)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.state')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
